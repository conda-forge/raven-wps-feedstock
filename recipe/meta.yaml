{% set name = "raven-wps" %}
{% set version = "0.19.0" %}
{% set python_min = "3.10.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/b/birdhouse_raven/birdhouse_raven-{{ version }}.tar.gz
  sha256: f0554e0025d8c5b742de8a2f13f4a5d50710a97cfe224ab2fca9edf77c841f25

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  entry_points:
    - raven-wps=raven.cli:cli

requirements:
  host:
    - python {{ python_min }}
    - pip
    - flit-core >=3.12,<4
  run:
    - python >={{ python_min }}
    - anyascii >=0.3.2
    - click >=8.1.7
    - filelock >=3.14.1
    - jinja2 >=3.1.4
    - matplotlib-base
    - netcdf4
    - numpy >=1.24.0
    - owslib
    - packaging >=23.1
    - pandas >=2.2
    - psutil >=6.0.0
    - pywps >=4.6
    - requests >=2.31.0
    - xarray >=2023.11.0
    - xclim >=0.48.2
    # GIS libraries
    - affine
    - cartopy >=0.23.0
    - fiona >=1.9.6
    - gdal >=3.0
    - geojson
    - geopandas >=1.0
    - pyogrio >=0.7.2
    - pyproj >=3.4
    - rasterio
    - rasterstats
    - rioxarray
    - shapely >=2.0
    # Docs and other utilities
    - fsspec
    - psycopg2 # to use postgres to log pywps requests like in Prod
    - pymetalink >=6.5.3

test:
  requires:
    - make
    - pip
    - python {{ python_min }}
  imports:
    - raven
  source_files:
    - Makefile
  commands:
    - pip check
    - make start
    - sleep 2s
    - make stop

about:
  home: https://github.com/Ouranosinc/raven
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: An open source server project offering data collection and preparation, as well as geoprocessing and catchment delineation through the Web Processing Service (WPS) standard
  description: |
    Raven is an open source server project offering data collection and preparation,
    as well as geoprocessing and catchment delineation through the Web Processing
    Service (WPS) standard. Raven processes can be embedded in a graphical user
    interface or accessed directly from a programming environment. From Python,
    birdy WPSClient provides a user-friendly python interface to Raven's WPS
    processes for geospatial processing.
  doc_url: https://pavics-sdi.readthedocs.io/projects/raven/en/latest/
  dev_url: https://github.com/Ouranosinc/raven

extra:
  recipe-maintainers:
    - Zeitsperre
    - cjauvin
    - huard
